@page "/purchase"

@inject IPurchaseInventoryUseCase PurchaseInventoryUseCase

@using IMS.WebApp.ViewModels
<h3>Satın Alma</h3>
<br />

@if (purchaseViewModel != null)
{
    <EditForm Model="purchaseViewModel" OnValidSubmit="OnValidSubmit">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary></ValidationSummary>


        <div class="form-group">
            <label for="po">Satın Alma Emri</label>
            <InputText id="po" @bind-Value="purchaseViewModel.PurchaseOrder" class="form-control"></InputText>
        </div>

        <div class="form-group">
            <label for="inv">Satın Alınacak Envanter</label>
            <ViewInventoriesComponent 
                OnSelectInventory="OnSelectInventory"
                DisplaySearchResult="true"></ViewInventoriesComponent>             
                 
            <InputText id="inv" class="form-control" @bind-Value="purchaseViewModel.InventoryName" disabled></InputText>
            <input type="hidden" value="@purchaseViewModel.InventoryId" />
            @if (selectedInventory != null)
            {
                <text>Fiyat:</text>
                @selectedInventory?.Price.ToString("c")
            }
        </div>

        <div class="form-group">
            <label for="qty">Adet</label>
            <InputNumber id="qty" @bind-Value="purchaseViewModel.QuantityToPurchase" class="form-control"></InputNumber>
        </div>
        <br />
        <button type="submit" class="btn btn-primary">Purchase</button>
    </EditForm>
}


@code {
    private PurchaseViewModel purchaseViewModel = new PurchaseViewModel();
    private Inventory selectedInventory;

    private void OnSelectInventory(Inventory inventory)
    {
        this.selectedInventory = inventory;
        purchaseViewModel.InventoryId = inventory.InventoryId;
        purchaseViewModel.InventoryName = inventory.InventoryName; 
    }

    private async Task OnValidSubmit()
    {
        await PurchaseInventoryUseCase.ExecuteAsync(
        this.purchaseViewModel.PurchaseOrder,
        this.selectedInventory,
        this.purchaseViewModel.QuantityToPurchase,
        "Frank"
    );

        this.purchaseViewModel = new PurchaseViewModel();
        this.selectedInventory = null; 
    }
}
