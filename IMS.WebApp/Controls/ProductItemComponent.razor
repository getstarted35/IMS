@inject NavigationManager NavigationManager
@inject IDeleteProductUseCase DeleteProductUseCase


@if (Product != null)
{
    <tr>
        <td>@Product.ProductName</td>
        <td>@Product.Quantity</td>
        <td>@Product.Price.ToString("c")</td>
        <td>
            <button type="button" class="btn btn-outline-primary" @onclick="@(()=> EditProduct(Product.ProductId))">Düzenle</button>
            <button type="button" class="btn btn-outline-danger" @onclick="@(async()=> await DeleteProduct(Product))">Sil</button>
        </td>
    </tr>
}


@code {

    [Parameter]
    public Product? Product { get; set; }

    [Parameter]
    public EventCallback OnProductDeleted { get; set; }


    private void EditProduct(int productId)
    {
        NavigationManager.NavigateTo($"/editproduct/{productId}");
    }

    private async Task DeleteProduct(Product product)  //Burada yaptığımız işlemler yukarıdaki butonla alakalı html de işlediklerimize burada ayar veriyoruz
    {
        await DeleteProductUseCase.ExecuteAsync(product.ProductId);
        await OnProductDeleted.InvokeAsync();
    }
}
